/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import facade.DocHelper;
import facade.GcExcelHelper;
import facade.PoiHelper;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author diego
 */
public class LoadingJFrame extends javax.swing.JFrame {
    
    JTextArea jta;
    PoiHelper poiHelper;
    GcExcelHelper gcExcelHelper;
    DocHelper docHelper;

    /**
     * Creates new form LoadingJFrame
     */
    public LoadingJFrame() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            initComponents();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(LoadingJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void run(PoiHelper poiHelper, GcExcelHelper gcExcelHelper, DocHelper docHelper){
        
        this.poiHelper = poiHelper;
        this.gcExcelHelper = gcExcelHelper;
        this.docHelper = docHelper;
        genReport();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NHS Report Gen. - Demo");
        setResizable(false);

        jLabel1.setText("Loading, please hold...");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Finish");
        jButton1.setEnabled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        dispose();
    }//GEN-LAST:event_jButton2MouseClicked

    
    private void genReport(){
        SwingWorker<Void, String> worker = new SwingWorker<Void, String>(){
            @Override
            protected Void doInBackground(){
                
                try{
                Thread.sleep(100);
                publish("Generating Graphs.xlsx output");
                
                publish("Generating sheet for graph 1");
                poiHelper.genGraphFile();
                poiHelper.getGraph1();
                publish("Generating sheet for graph 2");
                poiHelper.getGraph2();
                publish("Generating sheet for graph 3");
                poiHelper.getGraph3();
                publish("Generating sheet for graph 4");
                poiHelper.getGraph4();
                publish("Generating sheet for graph 5");
                poiHelper.getGraph5();
                publish("Generating sheet for graph 6");
                poiHelper.getGraph6();
                publish("Generating sheet for graph 7");
                poiHelper.getGraph7();
                publish("Generating sheet for graph 8");
                poiHelper.getGraph8();
                publish("Generating sheet for graph 9");
                poiHelper.getGraph9();
                publish("Generating sheet for graph 10");
                poiHelper.getGraph10();
                publish("Generating sheet for graph 11");
                poiHelper.getGraph11();
                publish("Creating charts");
                gcExcelHelper.genGraphs();
                publish("OverWriting Graphs.xlsx");
                publish("Generating Output.docx output");
                docHelper.genDocFile();
                publish("Generating table 1");
                docHelper.getTable0();
                publish("Generating table 2");
                docHelper.getTable1();
                publish("Generating table 3");
                docHelper.getTable2();
                publish("Generating table 4");
                docHelper.getTable3();
                publish("Generating table 5");
                docHelper.getTable4();
                publish("Generating table 6");
                docHelper.getTable5();
                publish("Generating table 7, this might take a while...");
                docHelper.getTable6();
                publish("OverWriting Output.docx");
                docHelper.saveDoc();
                publish("Program finished - Result OK");
                
                }catch(Exception e){
                    Logger.getLogger(LoadingJFrame.class.getName()).log(Level.SEVERE, null, e);
                }
                return null;
            } 
            

            @Override
            protected void process(List<String> chunks) {
                for (String text: chunks) {
                    jTextArea1.append(text + "\n");
                }
            }

            @Override
            protected void done() {
                jButton2.setEnabled(false);
                jButton1.setEnabled(true);
                JOptionPane.showMessageDialog(null, "Output saved", "ReportGen - Demo Version", JOptionPane.INFORMATION_MESSAGE);
            }
            
            
    } ;
        worker.execute();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadingJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
